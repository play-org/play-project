import React from 'react';

export default function Svg() {
  const tmp = document.createElement('div');
  const svg =
    '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1564394366771" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1299" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M876.721731 744.176105h-92.869238c46.738664-27.737347 137.976294-101.514958 91.755409-236.685606-15.521355-45.450235-37.755786-84.84365-66.113264-117.849107 0.848918-14.287112-0.704421-24.666792-3.299342-32.493697 6.767262-11.716275 22.288617-33.475071 33.938664-33.47507 0.186642 0 0.379304 0 0.571967 0.012041a35.419755 35.419755 0 0 0 21.951458 7.616181 35.690687 35.690687 0 0 0 35.648542-35.648542 35.576294 35.576294 0 0 0-25.786642-34.269803 35.588335 35.588335 0 0 0-34.275823-25.792662 35.690687 35.690687 0 0 0-35.648542 35.648542c0 5.894262 1.481091 11.668109 4.292756 16.857949-1.354657 6.707056-9.223706 24.720978-34.781561 38.255503-11.120226-3.040452-27.219567-6.153151-47.346755-6.514393a334.606209 334.606209 0 0 0-11.120225-6.080903c2.041016-21.523989-0.216745-35.726811-4.003763-45.654939 6.201317-11.987206 20.777422-34.528692 32.43951-35.058513 0.186642-0.006021 0.385325 0.006021 0.571967-0.006021a35.184948 35.184948 0 0 0 22.276575 6.622766 35.684666 35.684666 0 0 0 33.998871-37.225965 35.594356 35.594356 0 0 0-27.309877-33.071683 35.492004 35.492004 0 0 0-35.407714-24.21524 35.690687 35.690687 0 0 0-33.992851 37.225964c0.270931 5.894262 2.004892 11.595861 5.039323 16.647225-1.047601 6.74318-8.067733 25.046096-32.86698 39.706491-28.652493-6.676952-89.834807-12.45682-163.997743 29.772342l-0.403386-0.006021c-28.893321 0-59.352023 2.167451-90.63556 6.333773C313.076199 289.113829 229.039323 334.943368 176.388335 407.294073c-42.801129 58.870367-62.934337 133.165757-55.143556 203.84271 8.705927 79.196237 42.223142 116.205456 67.166886 133.057384h-24.606585a31.831421 31.831421 0 0 0-31.789276 31.795297 31.8254 31.8254 0 0 0 31.789276 31.783255h47.382879a41.000941 41.000941 0 0 0-8.531327 25.022013c0 22.752211 18.513641 41.265851 41.259831 41.265851h552.717968a41.314017 41.314017 0 0 0 41.259831-41.265851 40.99492 40.99492 0 0 0-8.537348-25.022013h47.376858a31.8254 31.8254 0 0 0 31.789276-31.783255 31.849483 31.849483 0 0 0-31.801317-31.813359z" p-id="1300"></path><path d="M754.513641 339.043462c13.685042 2.486548 22.884666 5.894262 26.29238 7.309125 0.331138 0.319097 0.596049 0.704421 0.921166 1.023518 3.359548 3.955597 8.772154 10.174976 10.716839 23.920226 0.915146 6.273565 1.131891 14.070367 0.156538 23.968391-2.974224 29.272625-16.496707 76.571214-53.734713 154.707809-31.22333 65.414864-72.182126 98.588899-121.756538 98.588899-45.775353 0-83.055503-29.05588-83.874318-29.657949-0.481656-0.319097-50.700282-35.925494-53.945437-90.527187-2.209595-37.496896 18.080151-75.58984 60.345437-113.146943 72.99492-64.933208 138.150894-79.003575 180.247601-79.214299h1.023519c13.040828 0 24.353716 1.288429 33.607526 3.02841z" fill="#D06A1D" p-id="1301"></path><path d="M864.746566 276.343932l-6.496331-0.6984-0.698401-6.508373a19.3746 19.3746 0 0 0-19.308372-17.321543 19.440828 19.440828 0 0 0-19.416745 19.416745c0 3.71477 1.101787 7.357291 3.166886 10.524177l1.005456 1.535278 0.246849 1.830291c0.626152 4.641957-3.389652 28.670555-31.855503 48.460583l0.836876 1.071684c0.547883 0.704421 1.137912 1.408843 1.788147 2.113265 1.053622 1.234243 2.203575 2.588899 3.389652 4.088052 9.307996-14.160677 25.214675-33.420884 42.72888-33.420884 1.81825 0 3.666604 0.180621 5.514958 0.523801l2.275823 0.43349 1.697837 1.571402c3.63048 3.335466 8.12794 5.09953 13.034807 5.099529a19.440828 19.440828 0 0 0 19.416745-19.416745 19.3746 19.3746 0 0 0-17.327564-19.302352zM764.526058 184.654751l-6.532455-0.403387-0.993415-6.472248c-1.505174-9.813735-10.042521-16.815804-20.060959-16.43048a19.452869 19.452869 0 0 0-18.525682 20.277705c0.1746 3.71477 1.432926 7.303104 3.642521 10.373659l1.071684 1.493133 0.325117 1.806208c0.836877 4.611853-2.083161 28.79699-29.633866 49.857385l0.897084 1.053622c0.547883 0.638194 1.180056 1.306491 1.872436 2.028975 1.089746 1.155974 2.263782 2.408278 3.473942 3.817121 8.56143-14.552023 23.462653-34.42032 41.271872-35.227093 1.794167-0.09031 3.654563 0.012041 5.514957 0.282973l2.293886 0.325117 1.776105 1.493133a19.278269 19.278269 0 0 0 13.263594 4.515522 19.446849 19.446849 0 0 0 18.51364-20.277705 19.362559 19.362559 0 0 0-18.170461-18.51364z" fill="#FFF5BA" p-id="1302"></path><path d="M683.824647 258.354092l0.94525 1.011477c5.129633 5.430668 14.576105 15.581562 13.022765 46.660395-44.818062-20.638946-96.246849-32.975353-153.395296-36.473377 74.235183-32.43349 129.198119-15.027658 139.427281-11.198495z" fill="#D06A1D" p-id="1303"></path><path d="M137.368203 609.378739C122.761994 476.321355 205.444214 319.939793 421.508937 290.9381c30.573095-4.112135 60.333396-6.2254 88.468109-6.2254 69.322295 0 130.631044 12.607338 182.57159 36.961054-43.49953 5.629351-101.075447 25.702352-163.690687 81.38777-46.154657 41.067168-68.286736 83.5492-65.739981 126.241957 3.678645 62.392474 58.545249 101.292192 60.441769 102.646848 1.72794 1.354657 41.994356 32.854939 93.555597 32.854939 38.7492 0 93.832549-18.730386 136.356726-107.84873 32.030103-67.100659 47.244403-112.930198 53.138664-144.857949 22.619755 28.953528 40.639699 62.609219 53.626341 100.702164 53.463782 156.273189-89.34111 221.585701-106.217121 228.67206h-534.457197c-8.007526-2.107244-70.068862-22.077893-82.194544-132.094074z" fill="#B25426" p-id="1304"></path><path d="M821.650423 832.77667a25.064158 25.064158 0 0 1-25.022013 25.034054H243.910442a25.058137 25.058137 0 0 1-25.028034-25.034054 25.058137 25.058137 0 0 1 25.028034-25.022013h552.717968a25.064158 25.064158 0 0 1 25.022013 25.022013z" fill="#CA6C14" p-id="1305"></path><path d="M876.721731 791.528881H163.80508a15.581562 15.581562 0 0 1-15.557479-15.557479 15.575541 15.575541 0 0 1 15.557479-15.557479h712.922672a15.5635 15.5635 0 0 1 15.557478 15.557479 15.581562 15.581562 0 0 1-15.563499 15.557479z" fill="#FCC400" p-id="1306"></path><path d="M176.767639 539.33396a13.534525 13.534525 0 0 1-12.818062-17.869426c69.195861-204.685607 307.055503-212.681091 309.445719-212.729256l0.325118-0.006021a13.522484 13.522484 0 0 1 0.331138 27.050988c-2.209595 0.054186-221.40508 7.790781-284.477893 194.354092a13.516463 13.516463 0 0 1-12.80602 9.199623zM514.775541 569.666228a13.522484 13.522484 0 0 1-12.595296-8.597554c-40.049671-102.363876 117.114581-181.493885 123.821636-184.811289a13.528504 13.528504 0 1 1 12.005269 24.251364c-1.420884 0.704421-141.685042 71.35127-110.630292 150.692004a13.546566 13.546566 0 0 1-12.601317 18.465475z" fill="#EFC39F" p-id="1307"></path></svg>';
  tmp.innerHTML = svg;
  const $svg = tmp.firstElementChild as SVGElement;
  const viewBox = $svg.getAttribute('viewBox');
  const stroke = $svg.getAttribute('stroke');
  const strokeWidth = $svg.getAttribute('stroke-width');
  const strokeDasharray = $svg.getAttribute('stroke-dasharray');
  console.log(viewBox, stroke, strokeWidth, strokeDasharray);

  const fills: string[] = [];
  for (let i = 0; i < $svg.children.length; i += 1) {
    const $path = $svg.children.item(i);
    if ($path) {
      // const path = $path.getAttribute('d');
      const fill = $path.getAttribute('fill');
      // path && paths.push(path);
      fill && fills.push(fill);
    }
  }
  return <div dangerouslySetInnerHTML={{ __html: svg }} />;
}
